# -*- coding: utf-8 -*-

import codecs, string
class rbmk_chenals:
    def __init__(self):
        '''Класс для преобразования типов каналов'''
##        '''Каталог библиотеки БОКР-РБМК
##        Общее число элементов загрузки активной зоны     54
##        № Контур Тип     Описание'''
        self.ROKR_CH_DIC={\
  1:[1,  u'18%' , u'ТВК 1,8%'],
  2:[1,  u'18сп', u'ТВК 1,8% + СП'],
  3:[1,  u'20%',  u'ТВК 2,0%'],
  4:[1,  u'20сп', u'ТВК 2,0% + СП'],
  5:[1,  u'20%и', u'ТВК 2,0% инт.'],
  6:[1,  u'ТВС',  u'Резервная ячейка с ТВК'],
  7:[1,  u'24%с', u'ТВК 2,4% (СДР)'],
  8:[1,  u'24%ц', u'ТВК 2,4% (ЦДР)'],
  9:[1,  u'24сп', u'ТВК 2,4% + СП (СДР)'],
 10:[1,  u'26%с', u'ЭТВК 2,6% (СДР)'],
 11:[1,  u'26%ц', u'ЭТВК 2,6% (ЦДР)'],
 12:[1,  u'ПЯ',   u'Пустая ячейка (<сухой> незагруженный ТК)'],
 13:[1,  u'СВ',   u'Незагруженный ТК'],
 14:[1,  u'КМПЦ', u'Резервная нетопливная ячейка КМПЦ'],
 15:[1,  u'СДП',  u'СДП 0т/1л с вытеснителем (<серый> ДП)'],
 16:[1,  u'СВДП', u'СДП 0т/0л - штанга (<светлый> ДП-штанга)'],
 17:[1,  u'ДПв',  u'<Тяжелый> ДП 1т/0л с вытеснителем'],
 18:[1,  u'ДП1',  u'<Тяжелый> ДП 1т/0л без вытеснителя'],
 19:[1,  u'ДП2',  u'<Тяжелый> ДП 1т/0л без вытеснителя'],
 20:[1,  u'ДП3',  u'<Тяжелый> ДП 1т/0л без вытеснителя'],
 21:[1,  u'ДПоч', u'Очехлованный <тяжелый> ДП 1т/0л'],
 22:[1,  u'ДПко', u'ДП кобальтовый немодифицированный'],
 23:[1,  u'ДПС',  u'Стальной ДП'],
 24:[1,  u'ДПК',  u'Кассетный (кластерный) ДП 2641.00.000'],
 25:[2,  u'РР',   u'Стержень СУЗ сб. 2091.00.000-01'],
 26:[2,  u'УСП',  u'Стержень СУЗ сб. 2093.00.000-01'],
 27:[2,  u'РВ0',  u'Стержень СУЗ сб. 2477.00.000-00'],
 28:[2,  u'РВ',   u'Стержень СУЗ сб. 2477.00.000-01'],
 29:[2,  u'БАЗ',  u'Стержень СУЗ сб. 2505.00.000'],
 30:[2,  u'ДКВ7', u'7-секционный ДКЭ(в)'],
 31:[2,  u'ДКВ8', u'8-секционный ДКЭ(в)'],
 32:[1,  u'АЯ',   u'Аварийная ячейка (ЧАЭС)'],
 33:[2,  u'РЛКн', u'Канал радиационного легирования, не загр.'],
 34:[2,  u'РЛКз', u'Канал радиационного легирования, загр.'],
 35:[2,  u'РЛК',  u'Канал радиационного легирования'],
 36:[0,  u'ОТР',  u'Ячейка отражателя с графитовым стержнем'],
 37:[0,  u'ОТРо', u'Ячейка отражателя с каналом охлаждения'],
 38:[2,  u'КД',   u'Канал для камеры деления (КД)'],
 39:[1,  u'36%',  u'ТВК 3,6%'],
 40:[2,  u'КРО',  u'Стержень СУЗ сб. 2399.00.000 (КРО)'],
 41:[1,  u'28%ц', u'ЭТВК 2,8% (ЦДР)'],
 42:[1,  u'28%с', u'ЭТВК 2,8% (СДР)'],
 43:[1,  u'ОбСв', u'Образец-свидетель'],
 44:[1,  u'ДПк1', u'ДП кобальтовый модифицированный сб. 2365.00.000-01'],
 45:[1,  u'ДПк2', u'ДП кобальтовый модифицированный сб.2365.00.000-02'],
 46:[2,  u'ВКК',  u'Нейтронный детектор в обезвоженной ячейке КО СУЗ'],
 47:[2,  u'РР0',  u'Стержень СУЗ сб. 1971.00.000-01'],
 48:[2,  u'УСП0', u'Стержень СУЗ сб. 1973.00.000'],
 49:[2,  u'АР0',  u'Стержень СУЗ сб. 1975.00.000'],
 50:[1,  u'ДПк3', u'ДП кобальтовый модифицированный сб. 2365.00.000-03'],
 51:[1,  u'ДПк4', u'ДП кобальтовый модифицированный сб. 2365.00.000-04'],
 52:[1,  u'ДПк5', u'ДП кобальтовый модифицированный сб. 2365.00.000-05'],
 53:[1,  u'28%ч', u'ЭТВК 2,8% с повышенным содержанием четных изотопов U'],
 54:[2,  u'КСУЗ', u'Резервная нетопливная ячейка КО СУЗ'],
 55:[1,  u'ДПКm', u'Кассетный (кластерный) ДП модифицированный для 5 КуАЭС 2641m'],
 56:[1,  u'2%K5', u'ТВС 2% Курского пятого блока, при чтении файлов САДКО используется только оно!!'],
 -1:[1,  u'UNKN', u'\nUNKNOWN CELL TYPE\n']
 }
##        f=codecs.open('ggrr','w','utf_8')
##        f.write(str(self.ROKR_CH_DIC))
##        f.close()
 #######Соответствие типов каналов КДМК и БОКР
        self.BOKR2KDMK={
                        13:[24,'CWATDP'],
                        14:[22,'CEMPTY'],
                        24:[8 ,'C2641'],
                        25:[3 ,'C091'],
                        23:[25,'C605'],
                        26:[5 ,'C093'],
                        29:[1 ,'C505'],
                        36:[0 ,'CGRAPH'],
                        37:[99,'CGRCL'],
                        38:[2 ,'CDKE'],
                        40:[23,'C399'],
                        44:[52,'C23651'],
                        45:[53,'C23652'],
                        55:[26,'C2641m'],
                        3 :[12,'CTVS'],
                        4 :[14,'CTVS'],
                        56:[9,'CTVS'],
                        None:[98,'CGRVA']
                        }
        self.KDMK2BOKR={
                        'CWATDP': 13  ,
                        'CEMPTY': 14  ,
                        'C2641' : 24  ,
                        'C091'  : 25  ,
                        'C605'  : 23  ,
                        'C093'  : 26  ,
                        'C505'  : 29  ,
                        'CGRAPH': 36  ,
                        'CGRCL' : 37  ,
                        'CDKE'  : 38  ,
                        'C399'  : 40  ,
                        'C23651': 44  ,
                        'C23652': 45  ,
                        'C2641m': 55  ,
                        'CTVS'  : 56  ,
                        'CGRVA' : -1
                        }
        self.nKDMK2BOKR={
                        '0'   : -1,
                        'WAT' : 13,
                        'RCC' : 37,
                        'REF' : 36,
                        'PCAA': 55,
                        'CAA' : 24,
                        'R'   : 26,
                        'S'   : 29,
                        'X'   : 40,
                        'A'   : 56
##                        'B':
##                        'C':
##                        'D':
                        }
    def MCU2BOKR(self,MCU_CELL_NAME, KDMK):
        '''Преобразование MCU имен ячеек во вменяемые обозначения'''
        #print MCU_CELL_NAME,' MCU2BOKR'
        #return [1,'sdf','sdfff']
        if KDMK:
            try:
                ret=self.ROKR_CH_DIC[self.KDMK2BOKR[MCU_CELL_NAME]]
            except KeyError:
                MCU_CELL_NAME = MCU_CELL_NAME[:len(MCU_CELL_NAME) - 1]
                ret = self.MCU2BOKR(MCU_CELL_NAME,KDMK)
        else:
            MCU_CELL_NAME = string.lstrip(MCU_CELL_NAME)

            try:
                ret=self.ROKR_CH_DIC[self.nKDMK2BOKR[MCU_CELL_NAME]]
            except KeyError:
                MCU_CELL_NAME = MCU_CELL_NAME[:len(MCU_CELL_NAME) - 1]
                ret = self.MCU2BOKR(MCU_CELL_NAME,KDMK)
        #print ret
        return ret

    def SADCO2BOKR(self,SADCO_ID):
        '''Преобразование САДКОвских ID во вменяемые обозначения'''
        DIC_KeySad_ValBokr={
             2:56,\
             3:56,\
             4:56,\
             5:56,\
             6:56,\
             12:36,\
             13:37,\
             18:24,\
             19:55,\
             16:13,\
             26:29,\
             29:40,\
             25:26,\
             15:23}
        try:
            ret=self.ROKR_CH_DIC[DIC_KeySad_ValBokr[SADCO_ID]]
        except KeyError:
            ret=self.ROKR_CH_DIC[-1]
        return ret
##             2:'CTVS',\
##             3:'CTVS',\
##             4:'CTVS',\
##             5:'CTVS',\
##             6:'CTVS',\
##             12:'CGRAPH',\
##             13:'CGRAPW',\
##             18:'C2641',\
##             19:'C2641m',\
##             16:'CWATDP',\
##             26:'C505',\
##             29:'C399',\
##             25:'C093'
if __name__=='__main__':
    gr=rbmk_chenals()
    #grr=gr.BOKR2KDMK
    #print grr
